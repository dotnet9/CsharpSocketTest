<Window
    x:Class="SocketClient.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SocketClient.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extension="clr-namespace:SocketClient.Extension"
    xmlns:dto="clr-namespace:SocketDto;assembly=SocketDto"
    xmlns:logs="clr-namespace:SocketCore.LogHelper;assembly=SocketCore"
    xmlns:markup="clr-namespace:WpfExtensions.Xaml.Markup;assembly=WpfExtensions.Xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewmodel="clr-namespace:SocketClient.ViewModels"
    Title="Socket Client"
    Width="1800"
    Height="1000"
    d:DataContext="{d:DesignInstance viewmodel:MainViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Icon="/Assets/Images/favicon.ico"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:ProcessPowerUsageToBackgroundConverter x:Key="ProcessPowerUsageToBackgroundConverter" />
        <converters:ProcessPowerUsageToFormatConverter x:Key="ProcessPowerUsageToFormatConverter" />
        <converters:UsageToBackgroundConverter x:Key="UsageToBackgroundConverter" />
        <converters:UsageToFormatConverter x:Key="UsageToFormatConverter" />
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="23" />
        </Style>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30" />
            <Setter Property="Padding" Value="15,2" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="3" />
            <RowDefinition Height="200" />
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <GroupBox Header="Tcp服务配置">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,5,0" Text="IP：" />
                    <TextBox Width="150"
                             Text="{Binding TcpHelper.Ip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Margin="10,0,5,0" Text="端口：" />
                    <TextBox Width="50"
                             Text="{Binding TcpHelper.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Command="{Binding ConnectTcpCommand}"
                        Content="{markup:If {Binding TcpHelper.IsStarted},
                                            断开服务,
                                            连接服务}"
                        Foreground="{markup:If {Binding TcpHelper.IsStarted},
                                               {x:Static Brushes.Red},
                                               {x:Static Brushes.Green}}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Margin="15,0" Header="Udp组播配置">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,5,0" Text="IP：" />
                    <TextBox Width="150"
                             Text="{Binding UdpHelper.Ip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Margin="10,0,5,0" Text="端口：" />
                    <TextBox Width="50"
                             Text="{Binding UdpHelper.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Command="{Binding SubscribeUdpMulticastCommand}"
                        Content="{markup:If {Binding UdpHelper.IsStarted},
                                            取消订阅,
                                            订阅组播}"
                        Foreground="{markup:If {Binding UdpHelper.IsStarted},
                                               {x:Static Brushes.Red},
                                               {x:Static Brushes.Green}}" />
                </StackPanel>
            </GroupBox>
            <Button Command="{Binding RefreshCommand}" Content="刷新" />
            <Button Command="{Binding RefreshAllCommand}" Content="刷新所有客户端" />
        </StackPanel>
        <!--<extension:GridLineDecorator Grid.Row="1">-->
        <ListView Grid.Row="1"
                  x:Name="ProcessListView"
                  extension:ListViewBehavior.HeaderSort="True"
                  ItemsSource="{Binding DisplayProcesses, IsAsync=True, Mode=OneWay}"
                  ScrollViewer.CanContentScroll="True"
                  SelectionMode="Extended"
                  VirtualizingPanel.IsContainerVirtualizable="True"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="BorderThickness" Value="0 0 1 1" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        Width="50"
                        DisplayMemberBinding="{Binding PID, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="PId"
                        Header="PId" />
                    <GridViewColumn
                        Width="120"
                        DisplayMemberBinding="{Binding Name, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="Name"
                        Header="进程名称" />
                    <GridViewColumn
                        Width="80"
                        DisplayMemberBinding="{Binding Type, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="Type"
                        Header="进程类型" />
                    <GridViewColumn
                        Width="80"
                        DisplayMemberBinding="{Binding Status, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="Status"
                        Header="进程状态" />
                    <GridViewColumn
                        Width="120"
                        DisplayMemberBinding="{Binding Publisher, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="Publisher"
                        Header="发布者" />
                    <GridViewColumn
                        Width="120"
                        DisplayMemberBinding="{Binding CommandLine, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="CommandLine"
                        Header="命令行" />
                    <GridViewColumn Width="80" Header="CPU使用率"
                                    extension:ListViewBehavior.SortField="CPU">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding CPU, Converter={StaticResource UsageToBackgroundConverter}}"
                                    Text="{Binding CPU, Converter={StaticResource UsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="80" Header="内存使用率"
                                    extension:ListViewBehavior.SortField="Memory">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding Memory, Converter={StaticResource UsageToBackgroundConverter}}"
                                    Text="{Binding Memory, Converter={StaticResource UsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="100" Header="磁盘"
                                    extension:ListViewBehavior.SortField="Disk">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding Disk, Converter={StaticResource UsageToBackgroundConverter}}"
                                    Text="{Binding Disk, Converter={StaticResource UsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="100" Header="网络"
                                    extension:ListViewBehavior.SortField="Network">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding Network, Converter={StaticResource UsageToBackgroundConverter}}"
                                    Text="{Binding Network, Converter={StaticResource UsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="60" Header="GPU"
                                    extension:ListViewBehavior.SortField="GPU">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding GPU, Converter={StaticResource UsageToBackgroundConverter}}"
                                    Text="{Binding GPU, Converter={StaticResource UsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="120"
                        DisplayMemberBinding="{Binding GPUEngine, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="GPUEngine"
                        Header="GPU引擎" />
                    <GridViewColumn Header="电源使用情况"
                                    extension:ListViewBehavior.SortField="Power">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding Power, Converter={StaticResource ProcessPowerUsageToBackgroundConverter}}"
                                    Text="{Binding Power, Converter={StaticResource ProcessPowerUsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="120" Header="电源使用情况趋势"
                                    extension:ListViewBehavior.SortField="PowerUsageTrend">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Foreground="{Binding PowerUsageTrend, Converter={StaticResource ProcessPowerUsageToBackgroundConverter}}"
                                    Text="{Binding PowerUsageTrend, Converter={StaticResource ProcessPowerUsageToFormatConverter}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="170"
                        DisplayMemberBinding="{Binding LastUpdateTime, StringFormat=yyyy-MM-dd HH:mm:ss fff, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="LastUpdateTime"
                        Header="上次更新时间" />
                    <GridViewColumn
                        Width="170"
                        DisplayMemberBinding="{Binding UpdateTime, StringFormat=yyyy-MM-dd HH:mm:ss fff, Mode=OneWay}"
                        extension:ListViewBehavior.SortField="UpdateTime"
                        Header="更新时间" />
                </GridView>
            </ListView.View>
        </ListView>
        <!--</extension:GridLineDecorator>-->
        <GridSplitter
            Grid.Row="2"
            Height="3"
            HorizontalAlignment="Stretch"
            ResizeDirection="Rows" />
        <logs:LogView Grid.Row="3" Margin="3" />
        <StackPanel
            Grid.Row="4"
            VerticalAlignment="Center"
            Orientation="Horizontal">
            <TextBlock Text="{Binding BaseInfo}" />
        </StackPanel>
        <StackPanel
            Grid.Row="5"
            Margin="0,8"
            VerticalAlignment="Center">
            <TextBlock Margin="0,5,0,5">
                <Run Text="TCP：" />
                <Run
                    Foreground="{markup:If {Binding TcpHelper.IsRunning}, {x:Static Brushes.Green}, {x:Static Brushes.Red}}"
                    Text="{markup:If {Binding TcpHelper.IsRunning}, 已连接, 未连接}" />
                <Run Text="心跳  发送 " />
                <Run Foreground="Green"
                     Text="{Binding TcpHelper.SendHeartbeatTime, StringFormat=yyyy-MM-dd HH:mm:ss fff}" />
                <Run Text=" 响应 " />
                <Run Foreground="Green"
                     Text="{Binding TcpHelper.ResponseHeartbeatTime, StringFormat=yyyy-MM-dd HH:mm:ss fff}" />
                <Run Text=" 数据包 发送 " />
                <Run Foreground="Green" Text="{Binding TcpHelper.SendTime, StringFormat=yyyy-MM-dd HH:mm:ss fff}" />
                <Run Text=" 接收 " />
                <Run Foreground="Green" Text="{Binding TcpHelper.ReceiveTime, StringFormat=yyyy-MM-dd HH:mm:ss fff}" />

            </TextBlock>
            <TextBlock>
                <Run Text="UDP组播：" />
                <Run
                    Foreground="{markup:If {Binding UdpHelper.IsRunning}, {x:Static Brushes.Green}, {x:Static Brushes.Red}}"
                    Text="{markup:If {Binding UdpHelper.IsRunning}, 已订阅, 未订阅}" />
                <Run Text="{Binding UdpHelper.ReceiveCount,Mode=OneWay}" />
                <Run Text=" 时间 " />
                <Run Foreground="Green" Text="{Binding UdpHelper.ReceiveTime, StringFormat=yyyy-MM-dd HH:mm:ss fff}" />
            </TextBlock>
        </StackPanel>
    </Grid>
</Window>